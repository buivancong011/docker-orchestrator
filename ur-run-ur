#!/usr/bin/env bash
set -Eeuo pipefail

# ============= CONFIG =============
IMAGE="${IMAGE:-bringyour/community-provider:g4-latest}"
SBOX_PREFIX="${SBOX_PREFIX:-csbox}"
UR_PREFIX="${UR_PREFIX:-ur-}"
JWT_DIR_BASE="${JWT_DIR_BASE:-$HOME}"

PULL_ON_START="${PULL_ON_START:-false}"
LOG_MAX_SIZE="${LOG_MAX_SIZE:-10m}"
LOG_MAX_FILE="${LOG_MAX_FILE:-3}"
RECREATE_DELAY="${RECREATE_DELAY:-2}"

COUNT="${COUNT:-}"           # ví dụ 30
ROUTES="${ROUTES:-}"         # ví dụ "csbox1,csbox2,csbox5-10"

# ============= UTILS & ROUTES =============
die(){ echo "[ERR] $*" >&2; exit 1; }
info(){ echo "[INFO] $*"; }
warn(){ echo "⚠ $*"; }
need(){ command -v "$1" >/dev/null 2>&1 || die "Thiếu lệnh '$1'."; }

gen_from_count(){ local n="$1" pfx="$2"; for i in $(seq 1 "$n"); do echo "${pfx}${i}"; done; }
gen_from_routes(){
  local spec="$1" part a b base
  IFS=',' read -r -a part <<<"$spec"
  for x in "${part[@]}"; do
    if [[ "$x" =~ ^([a-zA-Z_-]+)([0-9]+)-([0-9]+)$ ]]; then
      base="${BASH_REMATCH[1]}"; a="${BASH_REMATCH[2]}"; b="${BASH_REMATCH[3]}"
      for i in $(seq "$a" "$b"); do echo "${base}${i}"; done
    else
      echo "$x"
    fi
  done
}
discover_sboxes_ps(){
  docker ps -a --format '{{.Names}}' | grep -E "^${SBOX_PREFIX}[0-9]+$" | sort -V
}
build_route_list(){
  if [[ -n "$ROUTES" ]]; then gen_from_routes "$ROUTES"; return; fi
  if [[ -n "$COUNT" ]]; then gen_from_count "$COUNT" "$SBOX_PREFIX"; return; fi
  discover_sboxes_ps
}

jwt_dir_for_sbox(){ echo "${JWT_DIR_BASE}/.urnetwork-$1"; }
jwt_file_for_sbox(){ echo "$(jwt_dir_for_sbox "$1")/jwt"; }
container_name_for_sbox(){ echo "${UR_PREFIX}$1"; }

pull_image(){ [[ "$PULL_ON_START" != true ]] && return 0; info "Pull $IMAGE ..."; docker pull "$IMAGE" >/dev/null || warn "Pull thất bại"; }

run_or_restart_for_sbox(){
  local s="$1" cname jwt_dir jwt_file st
  cname="$(container_name_for_sbox "$s")"
  jwt_dir="$(jwt_dir_for_sbox "$s")"
  jwt_file="$(jwt_file_for_sbox "$s")"

  if [[ ! -s "$jwt_file" ]]; then
    warn "$s: thiếu JWT ($jwt_file) → bỏ qua. Chạy: ur-get-jwts-v2 up"
    return 0
  fi

  st="$(docker inspect -f '{{.State.Status}}' "$s" 2>/dev/null || true)"
  if [[ "$st" != "running" ]]; then
    warn "$s không running → bỏ qua (cần net=container:$s)."
    return 0
  fi

  docker rm -f "$cname" >/dev/null 2>&1 || true
  sleep "$RECREATE_DELAY"
  docker run -d --name "$cname" \
    --restart=always \
    --log-opt "max-size=${LOG_MAX_SIZE}" --log-opt "max-file=${LOG_MAX_FILE}" \
    --network "container:${s}" \
    -v "${jwt_dir}:/root/.urnetwork" \
    "$IMAGE" provide >/dev/null
  info "✔ $cname (net=container:$s) đã start"
  sleep "$RECREATE_DELAY"
}

# ============= CLI =============
usage(){
  cat <<'EOF'
Usage:
  ur-run-ur-v2 up        # chạy containers dựa trên JWT đã có
  ur-run-ur-v2 down
  ur-run-ur-v2 status
  ur-run-ur-v2 logs
  ur-run-ur-v2 update    # pull image thủ công

Chỉ định routes (ưu tiên):
  ROUTES="csbox1,csbox2,csbox5-10"
  COUNT=30 (kèm SBOX_PREFIX=csbox)
  (fallback) dò Docker

ENV: IMAGE, SBOX_PREFIX, UR_PREFIX, JWT_DIR_BASE, PULL_ON_START,
     LOG_MAX_SIZE, LOG_MAX_FILE, RECREATE_DELAY, COUNT, ROUTES
EOF
}

cmd_up(){
  need docker
  pull_image
  local list; list="$(build_route_list || true)"
  [[ -n "$list" ]] || die "Không có route nào. Dùng COUNT=... hoặc ROUTES=..."
  info "Routes:"; echo "$list" | xargs -I{} echo " - {}"
  while read -r s; do [[ -n "$s" ]] && run_or_restart_for_sbox "$s"; done <<< "$list"
  info "✅ Hoàn tất."
}
cmd_down(){
  need docker
  docker ps -a --format '{{.Names}}' | grep -E "^${UR_PREFIX}${SBOX_PREFIX}[0-9]+$" \
    | while read -r n; do docker rm -f "$n" >/dev/null 2>&1 && echo "✗ $n đã xoá" || true; done
  info "[DONE] Đã dừng toàn bộ UR containers."
}
cmd_status(){
  need docker
  local list; list="$(build_route_list || true)"
  [[ -n "$list" ]] || { info "Không có route nào."; exit 0; }
  printf "%-10s | %-14s | %-10s | %-8s\n" "SBOX" "CONTAINER" "STATUS" "JWT?"
  echo "-----------------------------------------------------"
  while read -r s; do
    local cname; cname="$(container_name_for_sbox "$s")"
    local st; st="$(docker inspect -f '{{.State.Status}}' "$cname" 2>/dev/null || echo '-')"
    local jwt_file; jwt_file="$(jwt_file_for_sbox "$s")"
    local has="NO"; [[ -s "$jwt_file" ]] && has="YES"
    printf "%-10s | %-14s | %-10s | %-8s\n" "$s" "$cname" "$st" "$has"
  done <<< "$list"
}
cmd_logs(){
  need docker
  docker ps -a --format '{{.Names}}' | grep -E "^${UR_PREFIX}${SBOX_PREFIX}[0-9]+$" \
    | while read -r n; do
        echo "===== $n ====="
        docker logs --since=30m -n 200 "$n" || true
      done
}
cmd_update(){ need docker; info "Pull $IMAGE ..."; docker pull "$IMAGE" && info "✅ Pull xong. Chạy tiếp: ur-run-ur-v2 up" || die "Pull lỗi."; }

case "${1:-}" in
  up)       cmd_up ;;
  down)     cmd_down ;;
  status)   cmd_status ;;
  logs)     cmd_logs ;;
  update)   cmd_update ;;
  ""|help|-h|--help) usage ;;
  *) die "Lệnh không hợp lệ. Xem: ur-run-ur-v2 help" ;;
esac
